version: '2.1'
services:
#  sqlserver:
#    image: mcr.microsoft.com/mssql/server:2019-latest
#    container_name: sqlserver
#    ports:
#      - "1433:1433"
#    environment:
#      - "MSSQL_AGENT_ENABLED=true"
#      - "MSSQL_PID=Standard"
#      - "ACCEPT_EULA=Y"
#      - "SA_PASSWORD=Password!"
#  elasticsearch:
#    image: elastic/elasticsearch:7.6.0
#    environment:
#      - cluster.name=docker-cluster
#      - bootstrap.memory_lock=true
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#      - discovery.type=single-node
#    ports:
#      - "9200:9200"
#      - "9300:9300"
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#      nofile:
#        soft: 65536
#        hard: 65536
#  kibana:
#    image: elastic/kibana:7.6.0
#    ports:
#      - "5601:5601"
#  sqlserver:
#    image: mcr.microsoft.com/mssql/server:2017-latest
#    ports:
#      - 1433:1433
#    environment:
#      - ACCEPT_EULA=Y
#      - MSSQL_PID=Standard
#      - SA_PASSWORD=Password!
#      - MSSQL_AGENT_ENABLED=true
  elasticsearch:
    image: elastic/elasticsearch:7.6.0
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
  kibana:
    image: elastic/kibana:7.6.0
    ports:
      - "5601:5601"
  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.0
    ports:
      - '31000:31000'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_JMX_HOSTNAME: "localhost"
      KAFKA_JMX_PORT: 31000

#  schema-registry:
#      image: confluentinc/cp-schema-registry:5.3.0
#      depends_on:
#        - zookeeper
#        - kafka
#      ports:
#        - '8081:8081'
#        - '31002:31002'
#      environment:
#        SCHEMA_REGISTRY_HOST_NAME: schema-registry
#        SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
#        SCHEMA_REGISTRY_JMX_HOSTNAME: "localhost"
#        SCHEMA_REGISTRY_JMX_PORT: 31002

  kafka:
     # "`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-
     # An important note about accessing Kafka from clients on other machines:
     # -----------------------------------------------------------------------
     #
     # The config used here exposes port 9092 for _external_ connections to the broker
     # i.e. those from _outside_ the docker network. This could be from the host machine
     # running docker, or maybe further afield if you've got a more complicated setup.
     # If the latter is true, you will need to change the value 'localhost' in
     # KAFKA_ADVERTISED_LISTENERS to one that is resolvable to the docker host from those
     # remote clients
     #
     # For connections _internal_ to the docker network, such as from other services
     # and components, use kafka:29092.
     #
     # See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
     # "`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-
     #
     image: confluentinc/cp-enterprise-kafka:5.3.0
     ports:
       - '9092:9092'
       - '31001:31001'
     depends_on:
       - zookeeper
     environment:
       KAFKA_BROKER_ID: 1
       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
       KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
       KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
       KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
       KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
       CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
       CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
       CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
       CONFLUENT_METRICS_ENABLE: 'false'
       CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
       KAFKA_JMX_HOSTNAME: "localhost"
       KAFKA_JMX_PORT: 31001
  debezc:
    image: debezium/connect
#    links:
#      - "kafka:kafka"
#      - "zookeeper:zookeeper"
    ports:
      - "8083:8083"
    environment:
      - "GROUP_ID=1"
      - "CONFIG_STORAGE_TOPIC=my-connect-configs"
      - "OFFSET_STORAGE_TOPIC=my-connect-offsets"
#      - "ADVERTISED_HOST_NAME=debezc"
